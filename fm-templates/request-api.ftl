/*
 * This file is auto generated by api-tools,don't edit it!
 * @api ${apiInfo.title!''}
 * @description ${apiInfo.description!''}
 * @version ${apiInfo.version!'1.0.0'}
 * Created at ${createDate}
 */
import request from '@/utils/request';
import _ from 'lodash';
<#list items as item>
/**
 *@description ${item.description!''}
 <#if item.parameters??>
 	<#list item.parameters as p>
 *@param ${p.name} {${p.type}} #required:${p.required} #defaultValue:${p.defaultValue!''} #desc:${p.description!''}
 	</#list>
 </#if>
 <#if item.body??>
 *@body type:${item.body.type} description:${item.body.description!''}
 * {
 <#list item.body.fields as property>
     ${property.name}:${property.type} <#if property.description??>#description:${property.description}</#if> <#if property.enumm??> #valueScope:${property.enumm}</#if>
 </#list>
 * }
 </#if>
 */
export function ${item.name}(<#if item.parameters??><#list item.parameters as p><#if p.required=='true'>${p.name}, </#if></#list></#if><#if item.body??>requestBody, </#if>options) {
    let config = {
    url: '<#if item.baseUrl??>${item.baseUrl}</#if>${item.url}',
    method: '${item.method}'<#if item.parameters?? && (item.parameters?size>0)>,
    params: {
    						<#list item.parameters as p>
   		        <#if p.required=='true'>${p.name}<#if !p?is_last>, </#if></#if>
    						</#list>
    	    }</#if><#if item.body??>,
    data: requestBody
    			<#else>
    			
    		    </#if>
    };
    return request(options ? _.merge(config, options) : config);
}
</#list>